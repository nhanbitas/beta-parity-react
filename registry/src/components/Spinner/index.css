.loading {
  @apply pointer-events-none;
}

.loading:not(.ghost):not(span) {
  @apply border-gray-200 bg-gray-100 text-gray-500;
}

.loading.success:not(.ghost):not(span) {
  @apply bg-green-50 text-green-600;
}

.loading.error:not(.ghost):not(span) {
  @apply bg-red-50 text-red-600;
}

span.loading.success,
span.loading.error {
  @apply bg-transparent;
}

.spinner {
  @apply flex items-center justify-center;
}

.spinner.circular svg {
  @apply animate-spin;
}

.spinner.accent circle,
.spinner.accent rect {
  animation: fillAccentAnimation 1s infinite;
}

.spinner.neutral circle,
.spinner.neutral rect {
  animation: fillNeutralAnimation 1s infinite;
}

.spinner.small,
.spinner.small svg {
  @apply h-4 w-4;
}

.spinner.medium,
.spinner.medium svg {
  @apply h-8 w-8;
}

.spinner.large,
.spinner.large svg {
  @apply h-12 w-12;
}

.spinner.extra-large,
.spinner.extra-large svg {
  @apply h-20 w-20;
}

/* Spinner */

/* Step animation type */
/* .spinner.dotted svg,
.spinner.sunburst svg {
  animation: l23 1s infinite steps(8);
}

@keyframes l23 {
  100% {
    transform: rotate(1turn);
  }
} */
/* Step animation type */

@keyframes fillAccentAnimation {
  0% {
    fill: var(--par-color-stroke-spinner-interactive-accent);
  }
  100% {
    fill: var(--par-color-stroke-spinner-inactive);
  }
}

@keyframes fillNeutralAnimation {
  0% {
    fill: var(--par-color-stroke-spinner-interactive-neutral);
  }
  100% {
    fill: var(--par-color-stroke-spinner-inactive);
  }
}
