@import 'tailwindcss/components';
@import './font.css';

@layer components {
  .prose {
    @apply relative mr-auto h-auto min-h-screen w-full max-w-screen-lg px-16 pb-8 pt-8;
  }
  .prose > :is(*):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply w-full;
  }
  .prose > :is(* + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply mb-6;
  }
  .prose :is(h1):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply text-heading-06 mb-4 mt-8 border-b-4 pb-2;
  }
  .prose :is(h2):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply text-heading-05 mb-4 mt-8 border-b pb-2;
  }
  .prose :is(h3):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply text-heading-04 mb-3 mt-6;
  }
  .prose :is(h4):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply text-heading-03 mb-3 mt-6 text-gray-600;
  }
  .prose :is(h5):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply text-heading-02 mb-2 mt-4 text-gray-600;
  }
  .prose :is(h6):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply text-heading-01 mb-2 mt-4 text-gray-600;
  }
  .prose :is(p):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply text-body-02 mb-6 mt-4;
  }
  .prose :is(* > p:first-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply mt-0;
  }
  .prose :is(* > p:last-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply mb-0;
  }
  .prose :is(p + p):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply mt-0;
  }
  .prose :is(a):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply text-blue-600 underline decoration-dotted decoration-1 underline-offset-2;
  }
  .prose > :is(:where(h1, h2, h3, h4, h5, h6) a):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply text-blue-600 no-underline;
  }
  .prose :is(u):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply underline underline-offset-2;
  }
  .prose :is(del, s):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply line-through decoration-gray-500;
  }
  .prose :is(ul):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply list-disc pl-7 text-base;
  }
  .prose :is(ol):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply list-decimal pl-7 text-base;
  }
  .prose :is(li:not(.task-list-item)):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply mt-1 pl-1;
  }
  .prose :is(ul > li):not(:where([class~='not-prose'], [class~='not-prose'] *))::marker {
    @apply text-lg text-gray-600;
  }
  .prose :is(ol > li):not(:where([class~='not-prose'], [class~='not-prose'] *))::marker {
    @apply text-gray-600;
  }
  .prose :is(li + li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply mt-1;
  }
  .prose :is(li > p + p):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply mt-6;
  }
  .prose :is(table):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply w-full border-gray-600 text-base;
  }
  .prose :is(th):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply border bg-gray-100 px-3 py-1;
  }
  .prose :is(td):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply border px-3 py-1;
  }
  .prose :is(code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply text-code-02 inline rounded bg-gray-200 px-1 py-0.5;
  }
  .prose :is(pre):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply rounded-md bg-gray-950 text-white;
  }
  .prose :is(pre code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply block overflow-visible rounded-none bg-transparent p-0;
  }
  .prose :is(blockquote):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply relative px-6 text-base text-gray-600;
  }
  .prose :is(blockquote):not(:where([class~='not-prose'], [class~='not-prose'] *))::before {
    @apply absolute left-0 h-full w-1 bg-gray-200 content-[''];
  }
  .prose :is(blockquote > blockquote):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply ml-0;
  }
  .prose :is(blockquote > p):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply mb-0 mt-0 py-2;
  }
  .prose :is(blockquote > p:has(+ blockquote)):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply mb-2;
  }
  .prose :is(dl):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply p-0 text-base;
  }
  .prose :is(dl dt:first-of-type):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply mt-0;
  }
  .prose :is(dl dt):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply mt-4 p-0 font-semibold italic;
  }
  .prose :is(dl dd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply mb-4 p-0 pl-4;
  }
  .prose :is(dl dd:last-of-type):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply mb-0;
  }
  .prose :is(li.task-list-item):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply relative mt-1 list-none leading-6;
  }
  .prose :is(li.task-list-item > input[type='checkbox']):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply absolute -left-7 top-1;
  }
  .prose
    :is(li.task-list-item > input[type='checkbox']:checked:disabled):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    @apply border-green-500 bg-green-50 opacity-100;
  }
  .prose
    :is(li.task-list-item > input[type='checkbox']:disabled):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply border-2 border-gray-200 bg-gray-100 opacity-100;
  }

  .prose
    :is(li.task-list-item > input[type='checkbox']:checked:disabled):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    background-image: url("data:image/svg+xml;utf8,<svg height='12px' width='12px' role='img' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'><path fill='none' d='M20 6L9 17L4 12' stroke='%2339AC56' stroke-width='3.5' stroke-linecap='round' stroke-linejoin='round'></path></svg>");
  }

  .prose :is(pre:has(code)):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    @apply relative overflow-hidden pt-8;
  }
  .prose :is(pre:has(code)):not(:where([class~='not-prose'], [class~='not-prose'] *))::before {
    @apply absolute left-0 top-0 h-8 w-full border-b border-gray-900 bg-black px-4 py-1.5 text-sm text-gray-400;
  }
  .prose :is(pre:has(code.language-markdown)):not(:where([class~='not-prose'], [class~='not-prose'] *))::before {
    content: 'Markdown';
  }
  .prose :is(pre:has(code.language-css)):not(:where([class~='not-prose'], [class~='not-prose'] *))::before {
    content: 'CSS';
  }
  .prose :is(pre:has(code.language-csharp)):not(:where([class~='not-prose'], [class~='not-prose'] *))::before {
    content: 'C#';
  }
  .prose :is(pre:has(code.language-php)):not(:where([class~='not-prose'], [class~='not-prose'] *))::before {
    content: 'PHP';
  }
  .prose :is(pre:has(code.language-javascript)):not(:where([class~='not-prose'], [class~='not-prose'] *))::before {
    content: 'JavaScript';
  }
}
