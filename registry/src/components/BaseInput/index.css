/* Disable default number input arrows on Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Disable default number input arrows on Firefox */
input[type='number'] {
  -moz-appearance: textfield;
}

input[type='date'] {
  -webkit-appearance: none;
  -moz-appearance: textfield;
}

input[type='date']::-webkit-date-and-time-value {
  text-align: left;
}

.contained-label + input[type='date']::-webkit-date-and-time-value {
  text-align: left;
  padding-top: 1.125rem;
}

input[type='search']::-ms-clear {
  display: none;
  width: 0;
  height: 0;
}

input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

/* Disable default appearance for search input on Chrome, Safari, Edge, Opera */
input[type='search']::-webkit-search-decoration,
input[type='search']::-webkit-search-cancel-button,
input[type='search']::-webkit-search-results-button,
input[type='search']::-webkit-search-results-decoration {
  -webkit-appearance: none;
}

/* Set default rounded-md appearance for search input on Chrome, Safari, Edge, Opera */
input[type='search'].rounded-md {
  -webkit-appearance: none;
  border-radius: 0.375rem;
}

/* Set default input font size to 1rem */
input,
.value-input-wrapper,
textarea {
  font-size: 1rem;
}

/* Base CSS input */

input.par-input,
.value-input-wrapper,
textarea.par-input {
  @apply text-body-compact-02 h-10 w-full text-ellipsis rounded-md border px-3;
}

input.par-input.medium,
.value-input-wrapper.medium,
textarea.par-input.medium {
  @apply h-12;
}

input.par-input:focus,
textarea.par-input:focus {
  @apply rounded-md -outline-offset-2;
}

input.par-input:disabled,
textarea.par-input:disabled {
  @apply cursor-not-allowed;
}

fieldset:disabled {
  @apply pointer-events-none;
}

/* This is the input value simulation for custom input instead of native input*/
.value-input-wrapper {
  @apply cursor-pointer;
}

/* Base CSS input wrapper*/
.input-wrapper {
  @apply relative h-min w-full rounded-md;
}

.input-wrapper:has(input[disabled]),
.input-wrapper:has(textarea[disabled]),
.input-wrapper:has(select[disabled]),
.input-wrapper:has([aria-disabled='true']) {
  @apply cursor-not-allowed;
}

.input-action .value-input-wrapper,
.input-action input.par-input {
  @apply pl-4 pr-10;
}

.input-actions .value-input-wrapper,
.input-actions input.par-input {
  @apply pl-4 pr-20;
}

.right-element-container {
  @apply absolute bottom-0 right-0 flex h-full items-center justify-center gap-2 rounded-e-md p-2.5;
}

.left-element-container {
  @apply absolute bottom-0 left-0 flex h-full items-center justify-center gap-2 rounded-s-md p-2.5;
}

.left-element-container ~ .value-input-wrapper,
.left-element-container ~ input.par-input {
  @apply pl-10;
}

.right-element-container button,
.right-element-container .input-icon,
.left-element-container button,
.left-element-container .input-icon {
  @apply flex items-center justify-center rounded-full p-0.5 transition-colors;
}

.right-element-container button:disabled,
.left-element-container button:disabled {
  @apply cursor-not-allowed;
}

.input-wrapper:has(.input-error-message) {
  @apply mb-7;
}

.input-wrapper .input-error-message {
  @apply text-label-02 absolute left-0 top-[calc(100%+0.25rem)] text-[var(--par-color-text-helper-adverse)];
}

/* Apply theme tokens */
/* Base css */
input.par-input::placeholder,
textarea.par-input::placeholder {
  @apply text-[var(--par-color-text-field-placeholder)] opacity-100;
}

input.par-input.alternative::placeholder,
textarea.par-input.alternative::placeholder {
  @apply text-[var(--par-color-text-field-alternative-placeholder)] opacity-100;
}

input.par-input:disabled::placeholder,
textarea.par-input:disabled::placeholder {
  @apply text-[var(--par-color-text-field-alpha-placeholder)] opacity-100;
}

input.par-input,
.value-input-wrapper,
textarea.par-textarea {
  @apply border-[var(--par-color-border-field-enabled)] bg-[var(--par-color-bg-field-enabled)] text-[var(--par-color-text-field-filled)];
}

input.par-input.alternative,
.value-input-wrapper.alternative,
textarea.par-textarea.alternative {
  @apply border-[var(--par-color-border-field-enabled)] bg-[var(--par-color-bg-field-alternative-enabled)] text-[var(--par-color-text-field-filled)];
}

/* State css */

input.par-input:disabled,
textarea.par-input:disabled {
  @apply border-[var(--par-color-border-field-disabled)] bg-[var(--par-color-bg-field-disabled)] text-[var(--par-color-text-field-disabled)];
}

input.par-input.alternative:disabled,
textarea.par-input.alternative:disabled {
  @apply bg-[var(--par-color-bg-field-alternative-disabled)];
}

input.par-input[readonly],
textarea.par-input[readonly] {
  @apply border-[var(--par-color-border-field-readonly)] bg-[var(--par-color-bg-field-readonly)] text-[var(--par-color-text-field-readonly)];
}

input.par-input.error-state,
textarea.par-input.error-state {
  @apply border-[2px] border-[var(--par-color-border-field-invalid)] bg-[var(--par-color-bg-field-invalid)] text-[var(--par-color-text-field-invalid)];
}

/* Button, icon css */
.right-element-container button,
.left-element-container button {
  @apply bg-[var(--bg-par-color-bg-field-button-enabled)] text-[var(--par-color-icon-field-button-enabled)];
}

.right-element-container .input-icon,
.left-element-container .input-icon {
  @apply text-[var(--par-color-text-field-placeholder)];
}

.right-element-container button:hover,
.left-element-container button:hover {
  @apply bg-[var(--par-color-bg-field-button-hovered)] text-[var(--par-color-icon-field-button-hovered)];
}

.right-element-container button:active,
.left-element-container button:active {
  @apply bg-[var(--par-color-bg-field-button-pressed)] text-[var(--par-color-icon-field-button-pressed)];
}

.right-element-container button:disabled,
.left-element-container button:disabled {
  @apply bg-[var(--par-color-bg-field-button-disabled)] text-[var(--par-color-icon-field-button-disabled)];
}

.input-wrapper:has(input[disabled]) .input-icon,
.input-wrapper:has(textarea[disabled]) .input-icon,
.input-wrapper:has(select[disabled]) .input-icon,
.input-wrapper:has([aria-disabled='true']) .input-icon {
  @apply text-[var(--par-color-text-field-alpha-placeholder)];
}
